---
const { 
  images, // Array of image data
  scenes, // Object containing scene configurations
  initialScene = 'Foyer', // Default initial scene
  sliderConfig = {}, // Slider configuration options
  autoRotateSpeed = -10,
  autoRotateDelay = 3000,
  autoRotateMinZoom = 2,
  defaultHfov = 110,
  transitionDuration = 2000,
} = Astro.props;

// Validate required props
if (!images || !scenes) {
  throw new Error('View360: images and scenes props are required');
}
---

<div class="flex w-[100%] items-center justify-center bg-zinc-900">
  <div class="relative mx-auto flex h-[75dvh] flex-col items-center justify-center 2lg:w-[100%]">
    <div class="bg-img absolute left-0 top-0 z-[0] h-full w-full overflow-hidden">
      <img src="/images/3dViewer/view-bg.jpg" alt="" class="h-full w-full object-cover blur-[35px]" />
    </div>
    <div class="z-1 relative flex h-full w-full flex-col">
      <div class="plan-map-wrap hidden">
        <div class="relative mx-auto h-full w-full overflow-y-scroll">
          <div class="relative z-10 h-[120vh] w-full">
            <div class="absolute left-0 top-0 h-full w-full">
              <div
                class="plan-close-btn absolute flex cursor-pointer items-center justify-center overflow-hidden rounded-md bg-black/90 duration-200 hover:bg-black/100"
              >
                <img src="/images/svg/close-white.svg" alt="map" class="h-[60%] object-cover" />
              </div>
              <div class="foyer hotspot">
                <img src="/images/svg/plan-pin.svg" alt="hotspot" class="h-full w-full object-cover" />
              </div>
              <div class="common-area hotspot">
                <img src="/images/svg/plan-pin.svg" alt="hotspot" class="h-full w-full object-cover" />
              </div>
              <div class="balcony hotspot">
                <img src="/images/svg/plan-pin.svg" alt="hotspot" class="h-full w-full object-cover" />
              </div>
              <div class="kitchen hotspot">
                <img src="/images/svg/plan-pin.svg" alt="hotspot" class="h-full w-full object-cover" />
              </div>
              <div class="kitchen-area hotspot">
                <img src="/images/svg/plan-pin.svg" alt="hotspot" class="h-full w-full object-cover" />
              </div>
            </div>
            <img src="/images/svg/plan.jpg" alt="map" class="h-full w-full object-cover" />
          </div>
        </div>
      </div>
      <div class="flex h-[12%] items-center justify-between bg-black/30 pl-16 pr-28 lg:px-28">
        <div class="cursor-pointer">
          <h4
            id="current-scene-title"
            class="font20 rounded-full bg-white/40 px-10 py-3 text-center font-[400] text-white duration-300 hover:bg-zinc-950"
          >
            Foyer
          </h4>
        </div>
        <div class="flex w-[15%] items-center justify-start gap-x-2">
          <div class="relative">
            <svg
              class="autop autoplayButton autoRotateBtn w-[3rem] cursor-pointer 2lg:w-[4.5rem]"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 50 50"
              {...props}
            >
              <g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
                <path stroke="white" d="M18 16 h4 v18 h-4 z M28 16 h4 v18 h-4 z"></path>
                <path
                  stroke="white"
                  d="M25 43.75c10.355 0 18.75-8.395 18.75-18.75S35.355 6.25 25 6.25S6.25 14.645 6.25 25S14.645 43.75 25 43.75"
                ></path>
              </g>
            </svg>
          </div>
          <h4 class="font20 autoplayText cursor-pointer text-white">Pause</h4>
        </div>
      </div>
      <div class="panorama-wrap flex h-[73%] w-full items-center justify-center overflow-hidden">
        <div id="panorama-img" class="relative mx-auto h-full w-full"></div>
      </div>
      <div class="grid h-[15%] grid-cols-6 items-center justify-items-start bg-black/30 px-10 lg:px-28">
        <div class="col-span-2 flex flex-col items-center gap-x-7 lg:col-span-2 lg:flex-row">
          <div
            class="plan-open-btn flex h-[3.5rem] w-[3.5rem] cursor-pointer items-center justify-center rounded-xl bg-white/40 duration-200 hover:bg-black/100 lg:h-[4.5rem] lg:w-[4.5rem]"
          >
            <img src="/images/svg/plan.svg" alt="map" class="h-full w-[60%] object-contain" />
          </div>
          <h4 class="font20 text-no font-[400] text-white">Floor Plan</h4>
        </div>
        <div class="img-selection z-10 col-span-4 flex w-full gap-x-2 lg:col-span-4">
          <div id="img-slider" class="flex h-full max-w-full">
            {
              images.map((image) => (
                <div class={`img-selection-item slider-item mt-2 w-full cursor-pointer overflow-hidden ${image.className}`}>
                  <div class="relative h-full w-full outline">
                    <img
                      src={image.src}
                      alt={image.title}
                      class="absolute left-0 top-0 h-full w-full rounded-lg object-cover"
                    />
                    <h4 class="font13 absolute left-1/2 top-1/2 w-full -translate-x-1/2 -translate-y-1/2 transform text-nowrap text-center font-[400] tracking-widest text-white">
                      {image.title}
                    </h4>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ 
  images, 
  scenes, 
  initialScene,
  sliderConfig,
  autoRotateSpeed,
  autoRotateDelay,
  autoRotateMinZoom,
  defaultHfov,
  transitionDuration 
}} is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    let imageCache = new Map();
    let viewer;

    // Preload background images
    function preloadBackgroundImages() {
      images.forEach((imageData) => {
        if (imageData.background) {
          const img = new Image();
          img.src = imageData.background;
          img.className = 'h-full w-full object-cover blur-[35px]';
          img.style.display = 'none';
          imageCache.set(imageData.title, img);
        }
      });
    }

    // Initialize viewer with dynamic configuration
    function initPanorama() {
      viewer = pannellum.viewer('panorama-img', {
        showControls: false,
        autoLoad: true,
        autoRotate: autoRotateSpeed,
        autoRotateDelay: autoRotateDelay,
        autoRotateMinZoom: autoRotateMinZoom,
        cache: {
          maxAge: 86400,
          strategy: 'lru',
        },
        sceneFadeDuration: 1000,
        hfov: defaultHfov,
        transitionDuration: transitionDuration,
        default: {
          type: 'equirectangular',
          hfov: defaultHfov,
        },
        scenes: scenes
      });

      // Initialize scene buttons dynamically
      const sceneButtons = {};
      Object.keys(scenes).forEach(sceneName => {
        const selector = `.${sceneName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}`;
        sceneButtons[selector] = sceneName;
      });

      // ... rest of initialization code ...
    }

    // Initialize slider with merged configuration
    const defaultSliderConfig = {
      arrows: true,
      autoplay: false,
      slidesToShow: 4,
      slidesToScroll: 1,
      infinite: true,
      speed: 1000,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 2,
            infinite: true,
          },
        },
      ],
    };

    $(document).ready(function () {
      $('#img-slider').slick({
        ...defaultSliderConfig,
        ...sliderConfig,
      });
    });

    // ... rest of the initialization code ...
  });
</script>

<style is:global>
  /* 360 viewer Container */
  .plan-map-wrap {
    position: absolute; /* Take the child out of the normal flow */
    z-index: 20;
    top: 50%; /* Move down 50% of the parent's height */
    left: 50%; /* Move right 50% of the parent's width */
    transform: translate(
      -50%,
      -50%
    ); /* Adjust the position back by half of its own size */ /* Center text inside the child */
  }
  .pnlm-panorama-info {
    display: none !important;
  }
  .pnlm-container {
    background: none !important;
  }

  .img-prev {
    color: white !important;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: -5.5%;
  }
  .img-next {
    color: white !important;
    top: 50%;
    transform: translateY(-50%);
    position: absolute;
    right: -5.5%;
  }
  /* the slides */
  .slick-slide {
    margin: 0 5px; /* Adjust the value to set the desired gap */
  }

  .img-box {
    height: 9.5vh;
    border-radius: 5px;
  }

  .img-box {
    border: 2px solid rgba(255, 255, 255, 0);
    transition: all 0.25s ease-in-out;
  }

  .img-box:hover {
    border: 2px solid white;
    transition: all 0.25s ease-in-out;
  }

  .img-box img {
    transition: border 0.4s ease-in-out;
  }
  .outline:hover img {
    transition: transform 1.5s ease-in-out;
    transform: scale(1.15);
  }

  .img-box.active {
    border: 2px solid white;
  }
  .img-box {
    filter: brightness(0.7);
  }

  .img-box:hover {
    filter: brightness(1.2);
  }

  .img-box.active {
    filter: brightness(1);
  }

  /* 
  .foyer-icon{
    width: 50px;
    height: 50px;
    background: url('/images/3dViewer/hotspotIcons/Foyer.svg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .foyer-icon:hover {
    width: 54px;
    height: 54px;
  }

  .commonArea-icon{
    width: 50px;
    height: 50px;
    background: url('/images/3dViewer/hotspotIcons/Comman Area.svg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .commonArea-icon:hover {
    width: 54px;
    height: 54px;
  }

  .balcony-icon{
    width: 50px;
    height: 50px;
    background: url('/images/3dViewer/hotspotIcons/Balcony.svg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .balcony-icon:hover {
    width: 54px;
    height: 54px;
  }

  .kitchen-icon{
    width: 50px;
    height: 50px;
    background: url('/images/3dViewer/hotspotIcons/Kitchen.svg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .kitchen-icon:hover {
    width: 54px;
    height: 54px;
  }

  .kitchen-area-icon{
    width: 50px;
    height: 50px;
    background: url('/images/3dViewer/hotspotIcons/Kitchen Area.svg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .kitchen-area-icon:hover {
    width: 54px;
    height: 54px;
  } */

  .custom-hotspot {
    background: url('/images/svg/hotspot-arr.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 52px;
    height: 52px;
    background-position: center;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition:
      width 0.25s ease-in-out,
      height 0.25s ease-in-out;
  }

  .custom-hotspot:hover {
    width: 60px;
    height: 60px;
  }

  .vr-mode-title {
    display: none;
  }

  div.custom-tooltip span {
    position: absolute;
    bottom: -10px;
    border-radius: 1.5px;
    background-color: rgba(0, 0, 0, 0.72);
    color: white;
    text-align: center;
    text-wrap: nowrap;
    padding: 3px 8px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1.4rem;
    font-family: 'Gilroy', sans-serif;
  }
  .plan-map-wrap {
    height: 80vh;
    width: 90%;
    margin: 0 auto;
    overflow: hidden;
    border-radius: 1rem;
  }

  @media (min-width: 1024px) {
    .plan-map-wrap {
      width: 80%;
    }
  }

  .plan-close-btn {
    top: 1rem;
    right: 1rem;
    height: 3.5rem;
    width: 3.5rem;
  }

  .hotspot {
    position: absolute;
    width: 8%;
    height: auto;
    cursor: pointer;
  }

  .foyer {
    bottom: 12%;
    right: 20.5%;
  }
  .common-area {
    bottom: 20%;
    right: 33.5%;
  }
  .balcony {
    left: 9.3%;
    bottom: 26.9%;
  }
  .kitchen {
    bottom: 30%;
    right: 38%;
  }
  .kitchen-area {
    bottom: 37.5%;
    right: 29%;
  }

  @media (max-width: 768px) {
    .foyer {
      bottom: 8%;
      right: 20%;
    }
    .common-area {
      bottom: 14%;
      right: 32%;
    }
    .balcony {
      left: 10%;
      bottom: 18%;
    }
    .kitchen {
      bottom: 20%;
      right: 35%;
    }
    .kitchen-area {
      bottom: 26%;
      right: 28%;
    }
  }

  .pnlm-load-box {
    display: none !important;
  }

  .pnlm-about-msg {
    visibility: hidden;
    a {
      visibility: hidden;
    }
  }
</style>
