---
import ImageComp from '@components/ImageComp.astro';

const imagesData = [
  {
    id: 1,
    src: '/images/sliderImg/11original.jpg',
    title: 'Foyer',
    className: 'foyer img-box',
    panorama: '/images/3dViewer/1.jpg',
  },
  {
    id: 2,
    src: '/images/sliderImg/22.jpg',
    title: 'Common Area',
    className: 'common-area img-box',
    panorama: '/images/3dViewer/2.jpg',
  },
  {
    id: 3,
    src: '/images/sliderImg/33.jpg',
    title: 'Balcony',
    className: 'balcony img-box',
    panorama: '/images/3dViewer/3.jpg',
  },
  {
    id: 4,
    src: '/images/sliderImg/44.jpg',
    title: 'Kitchen',
    className: 'kitchen img-box',
    panorama: '/images/3dViewer/4.jpg',
  },
  {
    id: 5,
    src: '/images/sliderImg/55.jpg',
    title: 'Kitchen Area',
    className: 'kitchen-area img-box',
    panorama: '/images/3dViewer/5.jpg',
  },
  {
    id: 6,
    src: '/images/sliderImg/66.jpg',
    title: 'Bedroom',
    className: 'bedroom img-box',
    panorama: '/images/3dViewer/6.jpg',
  },
  {
    id: 7,
    src: '/images/sliderImg/77.jpg',
    title: 'Bedroom',
    className: 'bedroom img-box',
    panorama: '/images/3dViewer/7.jpg',
  },
  {
    id: 8,
    src: '/images/sliderImg/88.jpg',
    title: 'Bedroom',
    className: 'bedroom img-box',
    panorama: '/images/3dViewer/8.jpg',
  },
  {
    id: 9,
    src: '/images/sliderImg/99.jpg',
    title: 'Bedroom',
    className: 'bedroom img-box',
    panorama: '/images/3dViewer/9.jpg',
  },
  {
    id: 10,
    src: '/images/sliderImg/100.jpg',
    title: 'Bedroom',
    className: 'bedroom img-box',
    panorama: '/images/3dViewer/10.jpg',
  },
];

const sceneConfig = {
        Foyer: {
          title: 'Foyer',
          hfov: 110,
          pitch: -3,
          yaw: 0,
          type: 'equirectangular',
          panorama: '/images/3dViewer/1.jpg',
          hotSpots: [
            {
              pitch: -22,
              yaw: 6,
              hfov: 1000,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Common Area',
              sceneId: 'CommonArea',
              scale: 2,
            },
            {
              pitch: -1,
              yaw: -3.5,
              hfov: 1000,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Balcony',
              sceneId: 'Balcony',
              scale: 2,
            },
          ],
        },
        CommonArea: {
          title: 'Common Area',
          hfov: 110,
          pitch: -3,
          yaw: 15,
          type: 'equirectangular',
          panorama: '/images/3dViewer/2.jpg',
          hotSpots: [
            {
              pitch: -1,
              yaw: 240.5,
              hfov: 1000,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Balcony',
              sceneId: 'Balcony',
              scale: 2,
            },
            {
              pitch: -25,
              yaw: -60,
              hfov: 1000,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Kitchen',
              sceneId: 'Kitchen',
              scale: 2,
            },
            {
              pitch: -30,
              yaw: 115,
              hfov: 10,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Foyer',
              sceneId: 'Foyer',
              scale: 2,
            },
          ],
        },
        Balcony: {
          title: 'Balcony',
          hfov: 110,
          pitch: -3,
          yaw: 0,
          type: 'equirectangular',
          panorama: '/images/3dViewer/3.jpg',
          hotSpots: [
            {
              pitch: -2,
              yaw: 7,
              hfov: 1000,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Common Area',
              sceneId: 'CommonArea',
              scale: 2,
            },
          ],
        },
        Kitchen: {
          title: 'Kitchen',
          hfov: 110,
          pitch: -3,
          yaw: 0,
          type: 'equirectangular',
          panorama: '/images/3dViewer/4.jpg',
          hotSpots: [
            {
              pitch: -30,
              yaw: 89,
              hfov: 10,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Common Area',
              sceneId: 'CommonArea',
              scale: 2,
            },
            {
              pitch: -3,
              yaw: 173,
              hfov: 10,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Balcony',
              sceneId: 'Balcony',
              scale: 2,
            },
            {
              pitch: -28,
              yaw: 281,
              hfov: 10,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Kitchen Area',
              sceneId: 'KitchenArea',
              scale: 2,
            },
          ],
        },
        KitchenArea: {
          title: 'Kitchen Area',
          hfov: 200,
          pitch: 0,
          yaw: 0,
          type: 'equirectangular',
          panorama: '/images/3dViewer/5.jpg',
          hotSpots: [
            {
              pitch: -30,
              yaw: 125,
              hfov: 10,
              type: 'scene',
              cssClass: 'custom-hotspot',
              createTooltipFunc: hotspot,
              createTooltipArgs: 'Kitchenh',
              sceneId: 'Kitchen',
              scale: 2,
            },
          ],
        },
      }

function hotspot(hotSpotDiv, args) {
  hotSpotDiv.classList.add('custom-tooltip');
  const span = document.createElement('span');
  span.innerHTML = args;
  hotSpotDiv.appendChild(span);
  span.style.width = span.scrollWidth - 20 + 'px';
  span.style.marginLeft = -(span.scrollWidth - hotSpotDiv.offsetWidth) / 2 + 'px';
  span.style.marginTop = -span.scrollHeight - 12 + 'px';
}
---

<div class="flex h-[100dvh] w-full items-center justify-center bg-zinc-100">
  <div class="relative mx-auto flex h-[75dvh] w-[60%] flex-col items-center justify-center">
    <div class="bg-img absolute left-0 top-0 z-[0] h-full w-full overflow-hidden">
      <img src="/images/3dViewer/view-bg.jpg" alt="" class="h-full w-full object-cover blur-[5px]" />
    </div>
    <div class="flex h-full w-full flex-col relative z-1">
      <div class="plan-map-wrap hidden">
        <!-- Floor plan content -->
      </div>
      <div class="flex h-[13%] items-center justify-between px-28">
        <!-- Title and Autoplay button -->
      </div>
      <div class="panorama-wrap flex h-[73%] w-full items-center justify-center">
        <div id="panorama-img" class="relative mx-auto h-full w-full"></div>
      </div>
      <div class="grid h-[16%] grid-cols-6 px-28 items-center">
        <!-- Floor plan button and image slider -->
      </div>
    </div>
  </div>
</div>

<script define:vars={{ sceneConfig }}>
  document.addEventListener('DOMContentLoaded', initPanoramaViewer);

  let viewer;
  const scenes = ['Foyer', 'CommonArea', 'Balcony', 'Kitchen', 'KitchenArea'];
  let currentSceneIndex = 0;

  function initPanoramaViewer() {
    viewer = pannellum.viewer('panorama-img', {
      showControls: false,
      autoLoad: true,
      autoRotate: -15,
      default: {
        firstScene: 'Foyer',
        author: 'Emdak studios',
        sceneFadeDuration: 1000,
      },
      scenes: sceneConfig,
    });

    setupSceneButtons();
    initImageSlider();
    setupFloorPlanToggle();
    setActiveImgBox();

    // Start the scene animation
    setTimeout(loadNextScene, 20000);
  }

  function loadNextScene() {
    if (currentSceneIndex < scenes.length) {
      viewer.loadScene(scenes[currentSceneIndex]);
      console.log(`Loaded scene: ${scenes[currentSceneIndex]}`);
      currentSceneIndex++;
      setTimeout(loadNextScene, 20000);
    } else {
      // Reset to the first scene when all scenes have been shown
      currentSceneIndex = 0;
      setTimeout(loadNextScene, 20000);
    }
  }

  function setupSceneButtons() {
    const sceneButtons = {
      '.foyer': 'Foyer',
      '.common-area': 'CommonArea',
      '.balcony': 'Balcony',
      '.kitchen': 'Kitchen',
      '.kitchen-area': 'KitchenArea',
    };

    Object.entries(sceneButtons).forEach(([selector, sceneName]) => {
      document.querySelectorAll(selector).forEach((element) => {
        element.addEventListener('click', () => {
          viewer.loadScene(sceneName);
          console.log(`Loaded scene: ${sceneName}`);
          // Reset the animation when a scene is manually selected
          currentSceneIndex = scenes.indexOf(sceneName);
          clearTimeout(window.sceneAnimationTimeout);
          window.sceneAnimationTimeout = setTimeout(loadNextScene, 20000);
        });
      });
    });
  }

  function initImageSlider() {
    $('#img-slider').slick({
      arrows: true,
      autoplay: false,
      slidesToShow: 4,
      slidesToScroll: 2,
      prevArrow: '<button type="button" class="img-prev p-1 bg-white/40 duration-200 hover:bg-black/100 rounded-full"><img src="/images/arr-left.png" class="w-[1.4vw] object-cover" alt="Next"></button>',
      nextArrow: '<button type="button" class="img-next p-1 bg-white/40 duration-200 hover:bg-black/100 rounded-full"><img src="/images/arr-right.png" class="w-[1.4vw] object-cover" alt="Next"></button>',
      speed: 1000,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 2,
            infinite: true,
          },
        },
      ],
    });
  }

  function setupFloorPlanToggle() {
    const planMapWrap = document.querySelector('.plan-map-wrap');
    document.querySelector('.plan-open-btn').addEventListener('click', () => {
      planMapWrap.style.display = 'block';
    });
    document.querySelector('.plan-close-btn').addEventListener('click', () => {
      planMapWrap.style.display = 'none';
    });
  }

  function setActiveImgBox() {
    const imgBoxes = document.querySelectorAll('.img-box');
    let currentIndex = 0;

    function activateNextImgBox() {
      imgBoxes.forEach(item => item.classList.remove('active'));
      imgBoxes[currentIndex].classList.add('active');
      currentIndex = (currentIndex + 1) % imgBoxes.length;
      if (currentIndex < 5) {
        setTimeout(activateNextImgBox, 20000);
      }
    }

    imgBoxes.forEach(box => {
      box.addEventListener('click', function() {
        imgBoxes.forEach(item => item.classList.remove('active'));
        this.classList.add('active');
      });
    });

    if (imgBoxes.length > 0) {
      activateNextImgBox();
    }
  }
</script>

<style is:global>
    /* 360 viewer Container */
    .plan-map-wrap {
      position: absolute; /* Take the child out of the normal flow */
      z-index: 20;
      top: 50%; /* Move down 50% of the parent's height */
      left: 50%; /* Move right 50% of the parent's width */
      transform: translate(
        -50%,
        -50%
      ); /* Adjust the position back by half of its own size */ /* Center text inside the child */
    }
    .pnlm-panorama-info {
      display: none !important;
    }
    .pnlm-container {
      background: none !important;
    }
  
    .img-prev {
      color: white !important;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: -5.5%;
    }
    .img-next {
      color: white !important;
      top: 50%;
      transform: translateY(-50%);
      position: absolute;
      right: -5.5%;
    }
    /* the slides */
    .slick-slide {
      margin: 0 5px; /* Adjust the value to set the desired gap */
    }
  
    .img-box {
      height: 9.5vh;
      border-radius: 5px;
    }
  
    .img-box {
      border: 2px solid rgba(255, 255, 255, 0);
      transition: all 0.25s ease-in-out;
    }
  
    .img-box:hover {
      border: 2px solid white;
      transition: all 0.25s ease-in-out;
    }
  
    .img-box img {
      transition: border 0.4s ease-in-out;
    }
    .outline:hover img {
      transition: transform 1.5s ease-in-out;
      transform: scale(1.15);
    }
  
    .img-box.active {
      border: 2px solid white;
    }
    .img-box {
      filter: brightness(0.7);
    }
  
    .img-box:hover {
      filter: brightness(1);
    }
  
    .img-box.active {
      filter: brightness(1);
    }
  
    .custom-hotspot {
      height: 50px;
      width: 50px;
      background: url('/images/svg/hotspot-arr.svg');
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
      transition:
        width 0.25s ease-in-out,
        height 0.25s ease-in-out;
    }
  
    .custom-hotspot:hover {
      width: 54px;
      height: 54px;
    }
  
    div.custom-tooltip span {
      position: absolute;
      border-radius: 1.5px;
      background-color: rgba(0, 0, 0, 0.72);
      color: white;
      text-align: center;
      top: 1.5rem;
      text-wrap: nowrap;
      width: 94px;
      max-width: 200px;
      padding: 2.5px 0px;
      cursor: default;
      font-size: 1rem;
    }
  
    .plan-map-wrap {
      height: 80vh;
      width: 90%;
      margin: 0 auto;
      overflow: hidden;
      border-radius: 1rem;
    }
  
    @media (min-width: 1024px) {
      .plan-map-wrap {
        width: 45%;
      }
    }
  
    .plan-close-btn {
      top: 1rem;
      right: 1rem;
      height: 3.5rem;
      width: 3.5rem;
    }
  
    .hotspot {
      position: absolute;
      width: 8%;
      height: auto;
      cursor: pointer;
    }
  
    .foyer {
      bottom: 12%;
      right: 20.5%;
    }
    .common-area {
      bottom: 20%;
      right: 33.5%;
    }
    .balcony {
      left: 9.3%;
      bottom: 26.9%;
    }
    .kitchen {
      bottom: 30%;
      right: 38%;
    }
    .kitchen-area {
      bottom: 37.5%;
      right: 29%;
    }
  
    @media (max-width: 768px) {
      .foyer {
        bottom: 8%;
        right: 20%;
      }
      .common-area {
        bottom: 14%;
        right: 32%;
      }
      .balcony {
        left: 10%;
        bottom: 18%;
      }
      .kitchen {
        bottom: 20%;
        right: 35%;
      }
      .kitchen-area {
        bottom: 26%;
        right: 28%;
      }
    }
  </style>