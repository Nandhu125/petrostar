---
// Assuming portfolioData is passed as a prop to this component
const { portfolioData } = Astro.props;
---

<style>
  .df-page-front:before,
  .df-page-back:before {
    opacity: 1 !important;
  }
</style>

<!-- Flipbook Container -->
<div
  class="flipbook-container mx-auto mt-[10rem] grid h-full max-w-[120rem] grid-cols-1 justify-items-center gap-20 px-5 lg:grid-cols-3"
>
  {
    portfolioData.map((portfolio) => (
      <div
        class="_df_thumb min-h-[55rem] !w-full flex-1 !rounded-[1rem]"
        source={portfolio.meta_box.portfolio_media[0].url}
        thumb={portfolio.meta_box.portfolio_media[1]?.url}
      >
        {portfolio.title.rendered}
      </div>
    ))
  }
</div>

<!-- Responsive adjustments -->
<style>
  @media (max-width: 1024px) {
    ._df_thumb {
      @apply w-full flex-1; /* 2 columns on medium screens */
    }
  }

  @media (max-width: 768px) {
    ._df_thumb {
      @apply w-full flex-1; /* 1 column on small screens */
    }
  }
</style>

<!-- Importing necessary styles and scripts -->
<link href="/lib/css/min.css" rel="stylesheet" type="text/css" media="print" onload="this.media='all'" />
<link href="/lib/css/themify-icons.min.css" rel="stylesheet" type="text/css" media="print" onload="this.media='all'" />
<script src="/lib/js/libs/jquery.min.js" type="text/javascript" defer></script>
<script src="/lib/js/dflip.min.js" type="text/javascript" defer></script>
